"""Primary class for grabbing experiment-specific metadata."""
from pathlib import Path
from datetime import datetime

import h5py
from pynwb.file import NWBFile
from neuroconv.basedatainterface import BaseDataInterface
from neuroconv.utils import DeepDict


class VisualCodingMetadataInterface(BaseDataInterface):
    """General metadata interface for visual-coding-ophys conversion."""

    def __init__(self, v1_nwbfile_path: Path):
        super().__init__(v1_nwbfile_path=v1_nwbfile_path)

    def get_metadata(self) -> DeepDict:
        metadata = super().get_metadata()

        with h5py.File(name=self.source_data["v1_nwbfile_path"], mode="r") as v1_nwbfile:
            metadata["NWBFile"]["session_start_time"] = datetime.strptime(
                v1_nwbfile["session_start_time"][()].decode("utf-8"), "%a %b %d %H:%M:%S %Y"
            )
            metadata["NWBFile"]["session_id"] = v1_nwbfile["general"]["ophys_experiment_id"][()].decode("utf-8")
            metadata["NWBFile"]["session_description"] = v1_nwbfile["session_description"][()].decode("utf-8") + "."

            metadata["NWBFile"]["experiment_description"] = v1_nwbfile["general"]["For more information"][()].decode(
                "utf-8"
            )
            metadata["NWBFile"]["protocol"] = v1_nwbfile["general"]["ophys_experiment_name"][()].decode("utf-8")
            metadata["NWBFile"]["data_collection"] = (
                "Generated by " + " ".join([x.decode("utf-8") for x in v1_nwbfile["general"]["generated_by"][:]]) + "."
            )
            metadata["NWBFile"]["institution"] = v1_nwbfile["general"]["institution"][()].decode("utf-8")

            # TODO: make lab-metadata extension for container ID and perhaps a couple other items
            metadata["NWBFile"]["notes"] = "Container ID: " + v1_nwbfile["general"]["experiment_container_id"][
                ()
            ].decode("utf-8")

            metadata["Subject"]["subject_id"] = v1_nwbfile["general"]["subject"]["subject_id"][()].decode("utf-8")
            metadata["Subject"]["description"] = (
                v1_nwbfile["general"]["subject"]["description"][()].decode("utf-8") + "."
            )
            age_string = v1_nwbfile["general"]["subject"]["age"][()].decode("utf-8")
            days_old = age_string.split(" ")  # really need to check how consistent this is...
            metadata["Subject"]["age"] = f"P{days_old}D"
            sex_string = v1_nwbfile["general"]["subject"]["sex"][()].decode(
                "utf-8"
            )  # check if any not male? or mistyped...
            metadata["Subject"]["sex"] = "M" if sex_string == "male" else "F"
            metadata["Subject"]["species"] = v1_nwbfile["general"]["subject"]["species"][()].decode("utf-8")
            metadata["Subject"]["strain"] = v1_nwbfile["general"]["specimen_name"][()].decode("utf-8")  # TODO: confirm
            metadata["Subject"]["genotype"] = v1_nwbfile["general"]["subject"]["genotype"][()].decode("utf-8")

        return metadata

    def add_to_nwbfile(self, nwbfile: NWBFile, metadata: dict):
        pass
